
BowTie.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000636  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002c  00800060  00000636  000006ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  0080008c  0080008c  000006f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000728  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000764  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000084c  00000000  00000000  000007a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000059f  00000000  00000000  00000ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b2  00000000  00000000  0000158f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00001c44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045f  00000000  00000000  00001d24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000030d  00000000  00000000  00002183  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002490  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	d9 c2       	rjmp	.+1458   	; 0x5b6 <__vector_1>
   4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
   6:	0b c3       	rjmp	.+1558   	; 0x61e <__vector_3>
   8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
   a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
   c:	fd c1       	rjmp	.+1018   	; 0x408 <__vector_6>
   e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
  10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
  12:	22 c0       	rjmp	.+68     	; 0x58 <__bad_interrupt>
  14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
  16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
  18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
  1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
  1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
  20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d2 e0       	ldi	r29, 0x02	; 2
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	e6 e3       	ldi	r30, 0x36	; 54
  36:	f6 e0       	ldi	r31, 0x06	; 6
  38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0
  3e:	ac 38       	cpi	r26, 0x8C	; 140
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <__do_copy_data+0xc>

00000044 <__do_clear_bss>:
  44:	20 e0       	ldi	r18, 0x00	; 0
  46:	ac e8       	ldi	r26, 0x8C	; 140
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
  4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
  4e:	af 3a       	cpi	r26, 0xAF	; 175
  50:	b2 07       	cpc	r27, r18
  52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
  54:	02 d0       	rcall	.+4      	; 0x5a <main>
  56:	ed c2       	rjmp	.+1498   	; 0x632 <_exit>

00000058 <__bad_interrupt>:
  58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <main>:
			PORTA |= 1<<LEDHIGHPINS[ledcounter];
		}

		ledcounter ++;
		if(ledcounter > 19){
			ledcounter = 0;
  5a:	85 b7       	in	r24, 0x35	; 53
  5c:	87 7e       	andi	r24, 0xE7	; 231
  5e:	80 61       	ori	r24, 0x10	; 16
  60:	85 bf       	out	0x35, r24	; 53
  62:	8b b7       	in	r24, 0x3b	; 59
  64:	80 62       	ori	r24, 0x20	; 32
  66:	8b bf       	out	0x3b, r24	; 59
  68:	80 b5       	in	r24, 0x20	; 32
  6a:	81 60       	ori	r24, 0x01	; 1
  6c:	80 bd       	out	0x20, r24	; 32
  6e:	b9 9a       	sbi	0x17, 1	; 23
  70:	c1 9a       	sbi	0x18, 1	; 24
  72:	c0 9a       	sbi	0x18, 0	; 24
  74:	85 b7       	in	r24, 0x35	; 53
  76:	82 60       	ori	r24, 0x02	; 2
  78:	85 bf       	out	0x35, r24	; 53
  7a:	8b b7       	in	r24, 0x3b	; 59
  7c:	80 64       	ori	r24, 0x40	; 64
  7e:	8b bf       	out	0x3b, r24	; 59
  80:	1f bc       	out	0x2f, r1	; 47
  82:	1e bc       	out	0x2e, r1	; 46
  84:	1d bc       	out	0x2d, r1	; 45
  86:	1c bc       	out	0x2c, r1	; 44
  88:	8c e7       	ldi	r24, 0x7C	; 124
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	9b bd       	out	0x2b, r25	; 43
  8e:	8a bd       	out	0x2a, r24	; 42
  90:	8e b5       	in	r24, 0x2e	; 46
  92:	88 60       	ori	r24, 0x08	; 8
  94:	8e bd       	out	0x2e, r24	; 46
  96:	8e b5       	in	r24, 0x2e	; 46
  98:	82 60       	ori	r24, 0x02	; 2
  9a:	8e bd       	out	0x2e, r24	; 46
  9c:	61 9a       	sbi	0x0c, 1	; 12
  9e:	78 94       	sei
  a0:	21 e0       	ldi	r18, 0x01	; 1
  a2:	ab e9       	ldi	r26, 0x9B	; 155
  a4:	b0 e0       	ldi	r27, 0x00	; 0
  a6:	b0 99       	sbic	0x16, 0	; 22
  a8:	39 c0       	rjmp	.+114    	; 0x11c <main+0xc2>
  aa:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <__data_end>
  ae:	81 11       	cpse	r24, r1
  b0:	37 c0       	rjmp	.+110    	; 0x120 <main+0xc6>
  b2:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
  b6:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
  ba:	40 91 8e 00 	lds	r20, 0x008E	; 0x80008e <buttonDebounce>
  be:	50 91 8f 00 	lds	r21, 0x008F	; 0x80008f <buttonDebounce+0x1>
  c2:	84 1b       	sub	r24, r20
  c4:	95 0b       	sbc	r25, r21
  c6:	89 3c       	cpi	r24, 0xC9	; 201
  c8:	91 05       	cpc	r25, r1
  ca:	50 f1       	brcs	.+84     	; 0x120 <main+0xc6>
  cc:	20 93 8c 00 	sts	0x008C, r18	; 0x80008c <__data_end>
  d0:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
  d4:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
  d8:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <buttonDebounce+0x1>
  dc:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <buttonDebounce>
  e0:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <displayState>
  e4:	8f 5f       	subi	r24, 0xFF	; 255
  e6:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <displayState>
  ea:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <displayCounter>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	fc 01       	movw	r30, r24
  f4:	e5 56       	subi	r30, 0x65	; 101
  f6:	ff 4f       	sbci	r31, 0xFF	; 255
  f8:	10 82       	st	Z, r1
  fa:	01 96       	adiw	r24, 0x01	; 1
  fc:	84 31       	cpi	r24, 0x14	; 20
  fe:	91 05       	cpc	r25, r1
 100:	c1 f7       	brne	.-16     	; 0xf2 <main+0x98>
 102:	40 91 92 00 	lds	r20, 0x0092	; 0x800092 <displayState>
 106:	50 e0       	ldi	r21, 0x00	; 0
 108:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	84 17       	cp	r24, r20
 112:	95 07       	cpc	r25, r21
 114:	2c f4       	brge	.+10     	; 0x120 <main+0xc6>
 116:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <displayState>
 11a:	02 c0       	rjmp	.+4      	; 0x120 <main+0xc6>
 11c:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__data_end>
 120:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <displayState>
 124:	81 30       	cpi	r24, 0x01	; 1
 126:	c9 f1       	breq	.+114    	; 0x19a <main+0x140>
 128:	38 f0       	brcs	.+14     	; 0x138 <main+0xde>
 12a:	82 30       	cpi	r24, 0x02	; 2
 12c:	09 f4       	brne	.+2      	; 0x130 <main+0xd6>
 12e:	74 c0       	rjmp	.+232    	; 0x218 <main+0x1be>
 130:	83 30       	cpi	r24, 0x03	; 3
 132:	09 f4       	brne	.+2      	; 0x136 <main+0xdc>
 134:	3c c1       	rjmp	.+632    	; 0x3ae <__stack+0x14f>
 136:	65 c1       	rjmp	.+714    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 138:	40 91 98 00 	lds	r20, 0x0098	; 0x800098 <millis>
 13c:	50 91 99 00 	lds	r21, 0x0099	; 0x800099 <millis+0x1>
 140:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <lastDisplayUpdate>
 144:	90 91 91 00 	lds	r25, 0x0091	; 0x800091 <lastDisplayUpdate+0x1>
 148:	48 1b       	sub	r20, r24
 14a:	59 0b       	sbc	r21, r25
 14c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <ringDelay>
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	84 17       	cp	r24, r20
 154:	95 07       	cpc	r25, r21
 156:	08 f0       	brcs	.+2      	; 0x15a <main+0x100>
 158:	a6 cf       	rjmp	.-180    	; 0xa6 <main+0x4c>
 15a:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 15e:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 162:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <lastDisplayUpdate+0x1>
 166:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <lastDisplayUpdate>
 16a:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <displayCounter>
 16e:	84 31       	cpi	r24, 0x14	; 20
 170:	30 f4       	brcc	.+12     	; 0x17e <main+0x124>
 172:	e8 2f       	mov	r30, r24
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	e5 56       	subi	r30, 0x65	; 101
 178:	ff 4f       	sbci	r31, 0xFF	; 255
 17a:	20 83       	st	Z, r18
 17c:	05 c0       	rjmp	.+10     	; 0x188 <main+0x12e>
 17e:	e8 2f       	mov	r30, r24
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	e9 57       	subi	r30, 0x79	; 121
 184:	ff 4f       	sbci	r31, 0xFF	; 255
 186:	10 82       	st	Z, r1
 188:	8f 5f       	subi	r24, 0xFF	; 255
 18a:	89 32       	cpi	r24, 0x29	; 41
 18c:	18 f4       	brcc	.+6      	; 0x194 <main+0x13a>
 18e:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <displayCounter>
 192:	89 cf       	rjmp	.-238    	; 0xa6 <main+0x4c>
 194:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <displayCounter>
 198:	86 cf       	rjmp	.-244    	; 0xa6 <main+0x4c>
 19a:	40 91 98 00 	lds	r20, 0x0098	; 0x800098 <millis>
 19e:	50 91 99 00 	lds	r21, 0x0099	; 0x800099 <millis+0x1>
 1a2:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <lastDisplayUpdate>
 1a6:	90 91 91 00 	lds	r25, 0x0091	; 0x800091 <lastDisplayUpdate+0x1>
 1aa:	48 1b       	sub	r20, r24
 1ac:	59 0b       	sbc	r21, r25
 1ae:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <chaseDelay>
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	84 17       	cp	r24, r20
 1b6:	95 07       	cpc	r25, r21
 1b8:	08 f0       	brcs	.+2      	; 0x1bc <main+0x162>
 1ba:	75 cf       	rjmp	.-278    	; 0xa6 <main+0x4c>
 1bc:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 1c0:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 1c4:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <lastDisplayUpdate+0x1>
 1c8:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <lastDisplayUpdate>
 1cc:	30 91 8d 00 	lds	r19, 0x008D	; 0x80008d <displayCounter>
 1d0:	83 2f       	mov	r24, r19
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	84 31       	cpi	r24, 0x14	; 20
 1d6:	91 05       	cpc	r25, r1
 1d8:	b4 f4       	brge	.+44     	; 0x206 <main+0x1ac>
 1da:	01 c0       	rjmp	.+2      	; 0x1de <main+0x184>
 1dc:	04 96       	adiw	r24, 0x04	; 4
 1de:	fc 01       	movw	r30, r24
 1e0:	e5 56       	subi	r30, 0x65	; 101
 1e2:	ff 4f       	sbci	r31, 0xFF	; 255
 1e4:	20 83       	st	Z, r18
 1e6:	00 97       	sbiw	r24, 0x00	; 0
 1e8:	21 f4       	brne	.+8      	; 0x1f2 <main+0x198>
 1ea:	53 96       	adiw	r26, 0x13	; 19
 1ec:	1c 92       	st	X, r1
 1ee:	53 97       	sbiw	r26, 0x13	; 19
 1f0:	f5 cf       	rjmp	.-22     	; 0x1dc <main+0x182>
 1f2:	fc 01       	movw	r30, r24
 1f4:	e6 56       	subi	r30, 0x66	; 102
 1f6:	ff 4f       	sbci	r31, 0xFF	; 255
 1f8:	10 82       	st	Z, r1
 1fa:	ac 01       	movw	r20, r24
 1fc:	4c 5f       	subi	r20, 0xFC	; 252
 1fe:	5f 4f       	sbci	r21, 0xFF	; 255
 200:	44 31       	cpi	r20, 0x14	; 20
 202:	51 05       	cpc	r21, r1
 204:	5c f3       	brlt	.-42     	; 0x1dc <main+0x182>
 206:	3f 5f       	subi	r19, 0xFF	; 255
 208:	34 30       	cpi	r19, 0x04	; 4
 20a:	18 f4       	brcc	.+6      	; 0x212 <main+0x1b8>
 20c:	30 93 8d 00 	sts	0x008D, r19	; 0x80008d <displayCounter>
 210:	4a cf       	rjmp	.-364    	; 0xa6 <main+0x4c>
 212:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <displayCounter>
 216:	47 cf       	rjmp	.-370    	; 0xa6 <main+0x4c>
 218:	40 91 98 00 	lds	r20, 0x0098	; 0x800098 <millis>
 21c:	50 91 99 00 	lds	r21, 0x0099	; 0x800099 <millis+0x1>
 220:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <lastDisplayUpdate>
 224:	90 91 91 00 	lds	r25, 0x0091	; 0x800091 <lastDisplayUpdate+0x1>
 228:	48 1b       	sub	r20, r24
 22a:	59 0b       	sbc	r21, r25
 22c:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <waveDelay>
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	84 17       	cp	r24, r20
 234:	95 07       	cpc	r25, r21
 236:	08 f0       	brcs	.+2      	; 0x23a <main+0x1e0>
 238:	36 cf       	rjmp	.-404    	; 0xa6 <main+0x4c>
 23a:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 23e:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 242:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <lastDisplayUpdate+0x1>
 246:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <lastDisplayUpdate>
 24a:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <displayCounter>
 24e:	81 11       	cpse	r24, r1
 250:	0b c0       	rjmp	.+22     	; 0x268 <__stack+0x9>
 252:	2c 93       	st	X, r18
 254:	53 96       	adiw	r26, 0x13	; 19
 256:	2c 93       	st	X, r18
 258:	53 97       	sbiw	r26, 0x13	; 19
 25a:	52 96       	adiw	r26, 0x12	; 18
 25c:	2c 93       	st	X, r18
 25e:	52 97       	sbiw	r26, 0x12	; 18
 260:	51 96       	adiw	r26, 0x11	; 17
 262:	2c 93       	st	X, r18
 264:	51 97       	sbiw	r26, 0x11	; 17
 266:	12 c0       	rjmp	.+36     	; 0x28c <__stack+0x2d>
 268:	81 30       	cpi	r24, 0x01	; 1
 26a:	39 f4       	brne	.+14     	; 0x27a <__stack+0x1b>
 26c:	11 96       	adiw	r26, 0x01	; 1
 26e:	2c 93       	st	X, r18
 270:	11 97       	sbiw	r26, 0x01	; 1
 272:	50 96       	adiw	r26, 0x10	; 16
 274:	2c 93       	st	X, r18
 276:	50 97       	sbiw	r26, 0x10	; 16
 278:	12 c0       	rjmp	.+36     	; 0x29e <__stack+0x3f>
 27a:	82 30       	cpi	r24, 0x02	; 2
 27c:	39 f4       	brne	.+14     	; 0x28c <__stack+0x2d>
 27e:	12 96       	adiw	r26, 0x02	; 2
 280:	2c 93       	st	X, r18
 282:	12 97       	sbiw	r26, 0x02	; 2
 284:	1f 96       	adiw	r26, 0x0f	; 15
 286:	2c 93       	st	X, r18
 288:	1f 97       	sbiw	r26, 0x0f	; 15
 28a:	12 c0       	rjmp	.+36     	; 0x2b0 <__stack+0x51>
 28c:	83 30       	cpi	r24, 0x03	; 3
 28e:	39 f4       	brne	.+14     	; 0x29e <__stack+0x3f>
 290:	13 96       	adiw	r26, 0x03	; 3
 292:	2c 93       	st	X, r18
 294:	13 97       	sbiw	r26, 0x03	; 3
 296:	1e 96       	adiw	r26, 0x0e	; 14
 298:	2c 93       	st	X, r18
 29a:	1e 97       	sbiw	r26, 0x0e	; 14
 29c:	12 c0       	rjmp	.+36     	; 0x2c2 <__stack+0x63>
 29e:	84 30       	cpi	r24, 0x04	; 4
 2a0:	39 f4       	brne	.+14     	; 0x2b0 <__stack+0x51>
 2a2:	14 96       	adiw	r26, 0x04	; 4
 2a4:	2c 93       	st	X, r18
 2a6:	14 97       	sbiw	r26, 0x04	; 4
 2a8:	1d 96       	adiw	r26, 0x0d	; 13
 2aa:	2c 93       	st	X, r18
 2ac:	1d 97       	sbiw	r26, 0x0d	; 13
 2ae:	12 c0       	rjmp	.+36     	; 0x2d4 <__stack+0x75>
 2b0:	85 30       	cpi	r24, 0x05	; 5
 2b2:	39 f4       	brne	.+14     	; 0x2c2 <__stack+0x63>
 2b4:	15 96       	adiw	r26, 0x05	; 5
 2b6:	2c 93       	st	X, r18
 2b8:	15 97       	sbiw	r26, 0x05	; 5
 2ba:	1c 96       	adiw	r26, 0x0c	; 12
 2bc:	2c 93       	st	X, r18
 2be:	1c 97       	sbiw	r26, 0x0c	; 12
 2c0:	18 c0       	rjmp	.+48     	; 0x2f2 <__stack+0x93>
 2c2:	86 30       	cpi	r24, 0x06	; 6
 2c4:	39 f4       	brne	.+14     	; 0x2d4 <__stack+0x75>
 2c6:	16 96       	adiw	r26, 0x06	; 6
 2c8:	2c 93       	st	X, r18
 2ca:	16 97       	sbiw	r26, 0x06	; 6
 2cc:	1b 96       	adiw	r26, 0x0b	; 11
 2ce:	2c 93       	st	X, r18
 2d0:	1b 97       	sbiw	r26, 0x0b	; 11
 2d2:	1c c0       	rjmp	.+56     	; 0x30c <__stack+0xad>
 2d4:	87 30       	cpi	r24, 0x07	; 7
 2d6:	69 f4       	brne	.+26     	; 0x2f2 <__stack+0x93>
 2d8:	17 96       	adiw	r26, 0x07	; 7
 2da:	2c 93       	st	X, r18
 2dc:	17 97       	sbiw	r26, 0x07	; 7
 2de:	18 96       	adiw	r26, 0x08	; 8
 2e0:	2c 93       	st	X, r18
 2e2:	18 97       	sbiw	r26, 0x08	; 8
 2e4:	19 96       	adiw	r26, 0x09	; 9
 2e6:	2c 93       	st	X, r18
 2e8:	19 97       	sbiw	r26, 0x09	; 9
 2ea:	1a 96       	adiw	r26, 0x0a	; 10
 2ec:	2c 93       	st	X, r18
 2ee:	1a 97       	sbiw	r26, 0x0a	; 10
 2f0:	16 c0       	rjmp	.+44     	; 0x31e <__stack+0xbf>
 2f2:	88 30       	cpi	r24, 0x08	; 8
 2f4:	59 f4       	brne	.+22     	; 0x30c <__stack+0xad>
 2f6:	1c 92       	st	X, r1
 2f8:	53 96       	adiw	r26, 0x13	; 19
 2fa:	1c 92       	st	X, r1
 2fc:	53 97       	sbiw	r26, 0x13	; 19
 2fe:	52 96       	adiw	r26, 0x12	; 18
 300:	1c 92       	st	X, r1
 302:	52 97       	sbiw	r26, 0x12	; 18
 304:	51 96       	adiw	r26, 0x11	; 17
 306:	1c 92       	st	X, r1
 308:	51 97       	sbiw	r26, 0x11	; 17
 30a:	12 c0       	rjmp	.+36     	; 0x330 <__stack+0xd1>
 30c:	89 30       	cpi	r24, 0x09	; 9
 30e:	39 f4       	brne	.+14     	; 0x31e <__stack+0xbf>
 310:	11 96       	adiw	r26, 0x01	; 1
 312:	1c 92       	st	X, r1
 314:	11 97       	sbiw	r26, 0x01	; 1
 316:	50 96       	adiw	r26, 0x10	; 16
 318:	1c 92       	st	X, r1
 31a:	50 97       	sbiw	r26, 0x10	; 16
 31c:	12 c0       	rjmp	.+36     	; 0x342 <__stack+0xe3>
 31e:	8a 30       	cpi	r24, 0x0A	; 10
 320:	39 f4       	brne	.+14     	; 0x330 <__stack+0xd1>
 322:	12 96       	adiw	r26, 0x02	; 2
 324:	1c 92       	st	X, r1
 326:	12 97       	sbiw	r26, 0x02	; 2
 328:	1f 96       	adiw	r26, 0x0f	; 15
 32a:	1c 92       	st	X, r1
 32c:	1f 97       	sbiw	r26, 0x0f	; 15
 32e:	12 c0       	rjmp	.+36     	; 0x354 <__stack+0xf5>
 330:	8b 30       	cpi	r24, 0x0B	; 11
 332:	39 f4       	brne	.+14     	; 0x342 <__stack+0xe3>
 334:	13 96       	adiw	r26, 0x03	; 3
 336:	1c 92       	st	X, r1
 338:	13 97       	sbiw	r26, 0x03	; 3
 33a:	1e 96       	adiw	r26, 0x0e	; 14
 33c:	1c 92       	st	X, r1
 33e:	1e 97       	sbiw	r26, 0x0e	; 14
 340:	12 c0       	rjmp	.+36     	; 0x366 <__stack+0x107>
 342:	8c 30       	cpi	r24, 0x0C	; 12
 344:	39 f4       	brne	.+14     	; 0x354 <__stack+0xf5>
 346:	14 96       	adiw	r26, 0x04	; 4
 348:	1c 92       	st	X, r1
 34a:	14 97       	sbiw	r26, 0x04	; 4
 34c:	1d 96       	adiw	r26, 0x0d	; 13
 34e:	1c 92       	st	X, r1
 350:	1d 97       	sbiw	r26, 0x0d	; 13
 352:	15 c0       	rjmp	.+42     	; 0x37e <__stack+0x11f>
 354:	8d 30       	cpi	r24, 0x0D	; 13
 356:	39 f4       	brne	.+14     	; 0x366 <__stack+0x107>
 358:	15 96       	adiw	r26, 0x05	; 5
 35a:	1c 92       	st	X, r1
 35c:	15 97       	sbiw	r26, 0x05	; 5
 35e:	1c 96       	adiw	r26, 0x0c	; 12
 360:	1c 92       	st	X, r1
 362:	1c 97       	sbiw	r26, 0x0c	; 12
 364:	1b c0       	rjmp	.+54     	; 0x39c <__stack+0x13d>
 366:	8e 30       	cpi	r24, 0x0E	; 14
 368:	51 f4       	brne	.+20     	; 0x37e <__stack+0x11f>
 36a:	16 96       	adiw	r26, 0x06	; 6
 36c:	1c 92       	st	X, r1
 36e:	16 97       	sbiw	r26, 0x06	; 6
 370:	1b 96       	adiw	r26, 0x0b	; 11
 372:	1c 92       	st	X, r1
 374:	1b 97       	sbiw	r26, 0x0b	; 11
 376:	8f 5f       	subi	r24, 0xFF	; 255
 378:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <displayCounter>
 37c:	94 ce       	rjmp	.-728    	; 0xa6 <main+0x4c>
 37e:	8f 30       	cpi	r24, 0x0F	; 15
 380:	69 f4       	brne	.+26     	; 0x39c <__stack+0x13d>
 382:	17 96       	adiw	r26, 0x07	; 7
 384:	1c 92       	st	X, r1
 386:	17 97       	sbiw	r26, 0x07	; 7
 388:	18 96       	adiw	r26, 0x08	; 8
 38a:	1c 92       	st	X, r1
 38c:	18 97       	sbiw	r26, 0x08	; 8
 38e:	19 96       	adiw	r26, 0x09	; 9
 390:	1c 92       	st	X, r1
 392:	19 97       	sbiw	r26, 0x09	; 9
 394:	1a 96       	adiw	r26, 0x0a	; 10
 396:	1c 92       	st	X, r1
 398:	1a 97       	sbiw	r26, 0x0a	; 10
 39a:	06 c0       	rjmp	.+12     	; 0x3a8 <__stack+0x149>
 39c:	8f 5f       	subi	r24, 0xFF	; 255
 39e:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <displayCounter>
 3a2:	80 31       	cpi	r24, 0x10	; 16
 3a4:	08 f4       	brcc	.+2      	; 0x3a8 <__stack+0x149>
 3a6:	7f ce       	rjmp	.-770    	; 0xa6 <main+0x4c>
 3a8:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <displayCounter>
 3ac:	7c ce       	rjmp	.-776    	; 0xa6 <main+0x4c>
 3ae:	8a b3       	in	r24, 0x1a	; 26
 3b0:	80 77       	andi	r24, 0x70	; 112
 3b2:	8a bb       	out	0x1a, r24	; 26
 3b4:	c1 98       	cbi	0x18, 1	; 24
 3b6:	3f e9       	ldi	r19, 0x9F	; 159
 3b8:	86 e8       	ldi	r24, 0x86	; 134
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	31 50       	subi	r19, 0x01	; 1
 3be:	80 40       	sbci	r24, 0x00	; 0
 3c0:	90 40       	sbci	r25, 0x00	; 0
 3c2:	e1 f7       	brne	.-8      	; 0x3bc <__stack+0x15d>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <__stack+0x167>
 3c6:	00 00       	nop
 3c8:	85 b7       	in	r24, 0x35	; 53
 3ca:	80 62       	ori	r24, 0x20	; 32
 3cc:	85 bf       	out	0x35, r24	; 53
 3ce:	85 b7       	in	r24, 0x35	; 53
 3d0:	80 62       	ori	r24, 0x20	; 32
 3d2:	85 bf       	out	0x35, r24	; 53
 3d4:	88 95       	sleep
 3d6:	85 b7       	in	r24, 0x35	; 53
 3d8:	8f 7d       	andi	r24, 0xDF	; 223
 3da:	85 bf       	out	0x35, r24	; 53
 3dc:	85 b7       	in	r24, 0x35	; 53
 3de:	8f 7d       	andi	r24, 0xDF	; 223
 3e0:	85 bf       	out	0x35, r24	; 53
 3e2:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <displayState>
 3e6:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <displayCounter>
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	fc 01       	movw	r30, r24
 3f0:	e5 56       	subi	r30, 0x65	; 101
 3f2:	ff 4f       	sbci	r31, 0xFF	; 255
 3f4:	10 82       	st	Z, r1
 3f6:	01 96       	adiw	r24, 0x01	; 1
 3f8:	84 31       	cpi	r24, 0x14	; 20
 3fa:	91 05       	cpc	r25, r1
 3fc:	c1 f7       	brne	.-16     	; 0x3ee <__stack+0x18f>
 3fe:	c1 9a       	sbi	0x18, 1	; 24
 400:	52 ce       	rjmp	.-860    	; 0xa6 <main+0x4c>
 402:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <displayState>
 406:	4f ce       	rjmp	.-866    	; 0xa6 <main+0x4c>

00000408 <__vector_6>:
		}
	}
}

ISR(TIM1_COMPA_vect) {
 408:	1f 92       	push	r1
 40a:	0f 92       	push	r0
 40c:	0f b6       	in	r0, 0x3f	; 63
 40e:	0f 92       	push	r0
 410:	11 24       	eor	r1, r1
 412:	2f 93       	push	r18
 414:	3f 93       	push	r19
 416:	4f 93       	push	r20
 418:	5f 93       	push	r21
 41a:	6f 93       	push	r22
 41c:	7f 93       	push	r23
 41e:	8f 93       	push	r24
 420:	9f 93       	push	r25
 422:	af 93       	push	r26
 424:	bf 93       	push	r27
 426:	cf 93       	push	r28
 428:	df 93       	push	r29
 42a:	ef 93       	push	r30
 42c:	ff 93       	push	r31
	millis += 1; //Update millisecond timer
 42e:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 432:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <millis+0x1>
 43c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <millis>
	if(milliscounter > 9){
		millis += 1; //Update millisecond timer
		milliscounter = 0;
	}*/
	//updateLEDs();
	if(IRMODE == true) {
 440:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <IRMODE>
 444:	88 23       	and	r24, r24
 446:	09 f4       	brne	.+2      	; 0x44a <__vector_6+0x42>
 448:	53 c0       	rjmp	.+166    	; 0x4f0 <__vector_6+0xe8>
		if((millis - lastIntTime) > 200){
 44a:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 44e:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 452:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <lastIntTime>
 456:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <lastIntTime+0x1>
 45a:	82 1b       	sub	r24, r18
 45c:	93 0b       	sbc	r25, r19
 45e:	89 3c       	cpi	r24, 0xC9	; 201
 460:	91 05       	cpc	r25, r1
 462:	08 f4       	brcc	.+2      	; 0x466 <__vector_6+0x5e>
 464:	8c c0       	rjmp	.+280    	; 0x57e <__vector_6+0x176>
			IRMODE = false;
 466:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <IRMODE>
 46a:	89 c0       	rjmp	.+274    	; 0x57e <__vector_6+0x176>
		}
		for(int x=0; x<20; x++){
			DDRA &= ~(0b10001111); //Set all LED pins to input
 46c:	8a b3       	in	r24, 0x1a	; 26
 46e:	80 77       	andi	r24, 0x70	; 112
 470:	8a bb       	out	0x1a, r24	; 26
			PORTA &= ~(0b10001111); //Set all LED pins to LOW
 472:	8b b3       	in	r24, 0x1b	; 27
 474:	80 77       	andi	r24, 0x70	; 112
 476:	8b bb       	out	0x1b, r24	; 27
			if(pwmcounter > pwmvalue){
 478:	90 91 93 00 	lds	r25, 0x0093	; 0x800093 <pwmcounter>
 47c:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <pwmvalue>
 480:	89 17       	cp	r24, r25
 482:	e8 f4       	brcc	.+58     	; 0x4be <__vector_6+0xb6>
				DDRA |= 1<<LEDHIGHPINS[x] | 1<<LEDLOWPINS[x];
 484:	9a b3       	in	r25, 0x1a	; 26
 486:	e9 01       	movw	r28, r18
 488:	00 80       	ld	r0, Z
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__vector_6+0x88>
 48c:	cc 0f       	add	r28, r28
 48e:	dd 1f       	adc	r29, r29
 490:	0a 94       	dec	r0
 492:	e2 f7       	brpl	.-8      	; 0x48c <__vector_6+0x84>
 494:	b9 01       	movw	r22, r18
 496:	0c 90       	ld	r0, X
 498:	02 c0       	rjmp	.+4      	; 0x49e <__vector_6+0x96>
 49a:	66 0f       	add	r22, r22
 49c:	77 1f       	adc	r23, r23
 49e:	0a 94       	dec	r0
 4a0:	e2 f7       	brpl	.-8      	; 0x49a <__vector_6+0x92>
 4a2:	8c 2f       	mov	r24, r28
 4a4:	86 2b       	or	r24, r22
 4a6:	89 2b       	or	r24, r25
 4a8:	8a bb       	out	0x1a, r24	; 26
				PORTA |= 1<<LEDHIGHPINS[x];
 4aa:	6b b3       	in	r22, 0x1b	; 27
 4ac:	c9 01       	movw	r24, r18
 4ae:	00 80       	ld	r0, Z
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__vector_6+0xae>
 4b2:	88 0f       	add	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	0a 94       	dec	r0
 4b8:	e2 f7       	brpl	.-8      	; 0x4b2 <__vector_6+0xaa>
 4ba:	86 2b       	or	r24, r22
 4bc:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4be:	86 e0       	ldi	r24, 0x06	; 6
 4c0:	8a 95       	dec	r24
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <__vector_6+0xb8>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <__vector_6+0xbe>
 4c6:	31 96       	adiw	r30, 0x01	; 1
 4c8:	11 96       	adiw	r26, 0x01	; 1
	//updateLEDs();
	if(IRMODE == true) {
		if((millis - lastIntTime) > 200){
			IRMODE = false;
		}
		for(int x=0; x<20; x++){
 4ca:	e4 17       	cp	r30, r20
 4cc:	f5 07       	cpc	r31, r21
 4ce:	71 f6       	brne	.-100    	; 0x46c <__vector_6+0x64>
				DDRA |= 1<<LEDHIGHPINS[x] | 1<<LEDLOWPINS[x];
				PORTA |= 1<<LEDHIGHPINS[x];
			}
			_delay_us(20);
		}
		PORTA &= ~(0b10001111); //Set all LED pins to LOW
 4d0:	8b b3       	in	r24, 0x1b	; 27
 4d2:	80 77       	andi	r24, 0x70	; 112
 4d4:	8b bb       	out	0x1b, r24	; 27
		pwmcounter ++;
 4d6:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <pwmcounter>
 4da:	8f 5f       	subi	r24, 0xFF	; 255
 4dc:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <pwmcounter>
		if(pwmcounter > 13){
 4e0:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <pwmcounter>
 4e4:	8e 30       	cpi	r24, 0x0E	; 14
 4e6:	08 f4       	brcc	.+2      	; 0x4ea <__vector_6+0xe2>
 4e8:	53 c0       	rjmp	.+166    	; 0x590 <__vector_6+0x188>
			pwmcounter = 0;
 4ea:	10 92 93 00 	sts	0x0093, r1	; 0x800093 <pwmcounter>
 4ee:	50 c0       	rjmp	.+160    	; 0x590 <__vector_6+0x188>
			if(pwmcounter > 12){
				pwmcounter = 0;
			}
		}*/
	} else {
		DDRA &= ~(0b10001111); //Set all LED pins to input
 4f0:	8a b3       	in	r24, 0x1a	; 26
 4f2:	80 77       	andi	r24, 0x70	; 112
 4f4:	8a bb       	out	0x1a, r24	; 26
		PORTA &= ~(0b10001111); //Set all LED pins to LOW
 4f6:	8b b3       	in	r24, 0x1b	; 27
 4f8:	80 77       	andi	r24, 0x70	; 112
 4fa:	8b bb       	out	0x1b, r24	; 27
		if(LEDS[ledcounter] == true){
 4fc:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <ledcounter>
 500:	f0 e0       	ldi	r31, 0x00	; 0
 502:	e5 56       	subi	r30, 0x65	; 101
 504:	ff 4f       	sbci	r31, 0xFF	; 255
 506:	80 81       	ld	r24, Z
 508:	88 23       	and	r24, r24
 50a:	69 f1       	breq	.+90     	; 0x566 <__vector_6+0x15e>
			DDRA |= 1<<LEDHIGHPINS[ledcounter] | 1<<LEDLOWPINS[ledcounter];
 50c:	a0 91 94 00 	lds	r26, 0x0094	; 0x800094 <ledcounter>
 510:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <ledcounter>
 514:	6a b3       	in	r22, 0x1a	; 26
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	ac 59       	subi	r26, 0x9C	; 156
 51a:	bf 4f       	sbci	r27, 0xFF	; 255
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	9c 01       	movw	r18, r24
 522:	0c 90       	ld	r0, X
 524:	02 c0       	rjmp	.+4      	; 0x52a <__vector_6+0x122>
 526:	22 0f       	add	r18, r18
 528:	33 1f       	adc	r19, r19
 52a:	0a 94       	dec	r0
 52c:	e2 f7       	brpl	.-8      	; 0x526 <__vector_6+0x11e>
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	e8 58       	subi	r30, 0x88	; 136
 532:	ff 4f       	sbci	r31, 0xFF	; 255
 534:	ac 01       	movw	r20, r24
 536:	00 80       	ld	r0, Z
 538:	02 c0       	rjmp	.+4      	; 0x53e <__vector_6+0x136>
 53a:	44 0f       	add	r20, r20
 53c:	55 1f       	adc	r21, r21
 53e:	0a 94       	dec	r0
 540:	e2 f7       	brpl	.-8      	; 0x53a <__vector_6+0x132>
 542:	24 2b       	or	r18, r20
 544:	35 2b       	or	r19, r21
 546:	26 2b       	or	r18, r22
 548:	2a bb       	out	0x1a, r18	; 26
			PORTA |= 1<<LEDHIGHPINS[ledcounter];
 54a:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <ledcounter>
 54e:	2b b3       	in	r18, 0x1b	; 27
 550:	f0 e0       	ldi	r31, 0x00	; 0
 552:	ec 59       	subi	r30, 0x9C	; 156
 554:	ff 4f       	sbci	r31, 0xFF	; 255
 556:	00 80       	ld	r0, Z
 558:	02 c0       	rjmp	.+4      	; 0x55e <__vector_6+0x156>
 55a:	88 0f       	add	r24, r24
 55c:	99 1f       	adc	r25, r25
 55e:	0a 94       	dec	r0
 560:	e2 f7       	brpl	.-8      	; 0x55a <__vector_6+0x152>
 562:	82 2b       	or	r24, r18
 564:	8b bb       	out	0x1b, r24	; 27
		}

		ledcounter ++;
 566:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <ledcounter>
 56a:	8f 5f       	subi	r24, 0xFF	; 255
 56c:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <ledcounter>
		if(ledcounter > 19){
 570:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <ledcounter>
 574:	84 31       	cpi	r24, 0x14	; 20
 576:	60 f0       	brcs	.+24     	; 0x590 <__vector_6+0x188>
			ledcounter = 0;
 578:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <ledcounter>
		}
	}
}
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__vector_6+0x188>
 57e:	e4 e6       	ldi	r30, 0x64	; 100
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	a8 e7       	ldi	r26, 0x78	; 120
 584:	b0 e0       	ldi	r27, 0x00	; 0
 586:	48 e7       	ldi	r20, 0x78	; 120
 588:	50 e0       	ldi	r21, 0x00	; 0
		}
		for(int x=0; x<20; x++){
			DDRA &= ~(0b10001111); //Set all LED pins to input
			PORTA &= ~(0b10001111); //Set all LED pins to LOW
			if(pwmcounter > pwmvalue){
				DDRA |= 1<<LEDHIGHPINS[x] | 1<<LEDLOWPINS[x];
 58a:	21 e0       	ldi	r18, 0x01	; 1
 58c:	30 e0       	ldi	r19, 0x00	; 0
 58e:	6e cf       	rjmp	.-292    	; 0x46c <__vector_6+0x64>
		ledcounter ++;
		if(ledcounter > 19){
			ledcounter = 0;
		}
	}
}
 590:	ff 91       	pop	r31
 592:	ef 91       	pop	r30
 594:	df 91       	pop	r29
 596:	cf 91       	pop	r28
 598:	bf 91       	pop	r27
 59a:	af 91       	pop	r26
 59c:	9f 91       	pop	r25
 59e:	8f 91       	pop	r24
 5a0:	7f 91       	pop	r23
 5a2:	6f 91       	pop	r22
 5a4:	5f 91       	pop	r21
 5a6:	4f 91       	pop	r20
 5a8:	3f 91       	pop	r19
 5aa:	2f 91       	pop	r18
 5ac:	0f 90       	pop	r0
 5ae:	0f be       	out	0x3f, r0	; 63
 5b0:	0f 90       	pop	r0
 5b2:	1f 90       	pop	r1
 5b4:	18 95       	reti

000005b6 <__vector_1>:

ISR(EXT_INT0_vect){
 5b6:	1f 92       	push	r1
 5b8:	0f 92       	push	r0
 5ba:	0f b6       	in	r0, 0x3f	; 63
 5bc:	0f 92       	push	r0
 5be:	11 24       	eor	r1, r1
 5c0:	2f 93       	push	r18
 5c2:	3f 93       	push	r19
 5c4:	8f 93       	push	r24
 5c6:	9f 93       	push	r25
	IRMODE = true;
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <IRMODE>
	if((millis - lastIntTime) > 1){
 5ce:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 5d2:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 5d6:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <lastIntTime>
 5da:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <lastIntTime+0x1>
 5de:	82 1b       	sub	r24, r18
 5e0:	93 0b       	sbc	r25, r19
 5e2:	02 97       	sbiw	r24, 0x02	; 2
 5e4:	58 f0       	brcs	.+22     	; 0x5fc <__vector_1+0x46>
		pwmvalue = millis - lastIntTime;
 5e6:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 5ea:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 5ee:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <lastIntTime>
 5f2:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <lastIntTime+0x1>
 5f6:	82 1b       	sub	r24, r18
 5f8:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <pwmvalue>
		
	}
	lastIntTime = millis;
 5fc:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <millis>
 600:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <millis+0x1>
 604:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <lastIntTime+0x1>
 608:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <lastIntTime>
}
 60c:	9f 91       	pop	r25
 60e:	8f 91       	pop	r24
 610:	3f 91       	pop	r19
 612:	2f 91       	pop	r18
 614:	0f 90       	pop	r0
 616:	0f be       	out	0x3f, r0	; 63
 618:	0f 90       	pop	r0
 61a:	1f 90       	pop	r1
 61c:	18 95       	reti

0000061e <__vector_3>:

ISR(PCINT1_vect){
 61e:	1f 92       	push	r1
 620:	0f 92       	push	r0
 622:	0f b6       	in	r0, 0x3f	; 63
 624:	0f 92       	push	r0
 626:	11 24       	eor	r1, r1
	
}
 628:	0f 90       	pop	r0
 62a:	0f be       	out	0x3f, r0	; 63
 62c:	0f 90       	pop	r0
 62e:	1f 90       	pop	r1
 630:	18 95       	reti

00000632 <_exit>:
 632:	f8 94       	cli

00000634 <__stop_program>:
 634:	ff cf       	rjmp	.-2      	; 0x634 <__stop_program>
